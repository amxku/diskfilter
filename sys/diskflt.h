
#define FILE_DEVICE_DISKFLT			0x8000
#define DISKFLT_IOCTL_BASE			0x800

#define CTL_CODE_DISKFLT(lastScan)	\
	CTL_CODE(FILE_DEVICE_DISKFLT, DISKFLT_IOCTL_BASE+lastScan, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_DISKFLT_LOCK				CTL_CODE_DISKFLT(0)
#define IOCTL_DISKFLT_UNLOCK			CTL_CODE_DISKFLT(1)
#define IOCTL_DISKFLT_GETINFO			CTL_CODE_DISKFLT(2)
#define IOCTL_DISKFLT_LOGIN				CTL_CODE_DISKFLT(3)

#define IOCTL_DISKFLT_PROTECTSYS		CTL_CODE_DISKFLT(4)	// 拦截外来驱动
#define IOCTL_DISKFLT_NOPROTECTSYS		CTL_CODE_DISKFLT(5)	// 不拦截

#define IOCTL_DISKFLT_PROTECTSYS_STATE	CTL_CODE_DISKFLT(6)	// 是否拦截

#define DISKFILTER_WIN32_DEVICE_NAME_A	"\\\\.\\DiskFlt"
#define DISKFILTER_WIN32_DEVICE_NAME_W	L"\\\\.\\DiskFlt"

#define DISKFILTER_DOS_DEVICE_NAME_W	L"\\DosDevices\\DiskFlt"

#define DISKFILTER_DEVICE_NAME_W		L"\\Device\\DiskFlt"

#ifdef _UNICODE
#define DISKFILTER_WIN32_DEVICE_NAME	DISKFILTER_WIN32_DEVICE_NAME_W
#else
#define DISKFILTER_WIN32_DEVICE_NAME	DISKFILTER_WIN32_DEVICE_NAME_A
#endif

#define MAGIC_CHAR	"[dbgger][dbgger]"


#define MAX_DOS_DRIVES 26

typedef struct _PROTECT_INFO
{
	BYTE	magicChar[32];
	BYTE	volumeInfo[MAX_DOS_DRIVES];	// 卷保护信息1表始保护
	BYTE	passWord[16];				// MD5密码
} PROTECT_INFO, *PPROTECT_INFO;